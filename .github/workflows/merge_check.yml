# This is a basic workflow to help you get started with Actions

name: Interactive Diary PR Check

# Controls when the workflow will run
on:
  push:
    branches: [dev]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: 'Run codecov on dev'
    runs-on: macos-latest
    steps:
    - name: checkout source code
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request_target.head.ref}}
        repository: ${{github.event.pull_request_target.head.repo.full_name}}
    - name:  Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Install Flutter 
      uses: subosito/flutter-action@v2.6.2
      with:
        flutter-version: '3.3.1'
        channel: 'stable'
    - name: Setup environment secrets
      shell: bash
      env:
        FIREBASE_OPTION: ${{ secrets.FIREBASE_OPTION }}
        ANDROID_GOOGLE_SERVICE: ${{ secrets.ANDROID_GOOGLE_SERVICE }}
        FIREBASE_APP_ID_FILE: ${{ secrets.FIREBASE_APP_ID_FILE }}
        ANDROID_GOOGLE_MAP_PROPERTIES: ${{ secrets.ANDROID_GOOGLE_MAP_PROPERTIES }}
        IOS_GOOGLE_MAP_PROPERTIES: ${{ secrets.IOS_GOOGLE_MAP_PROPERTIES }}
      run: |
        echo "$FIREBASE_OPTION" > lib/firebase_options.dart
        echo "$ANDROID_GOOGLE_SERVICE" > android/app/google-services.json
        echo "$FIREBASE_APP_ID_FILE" > ios/firebase_app_id_file.json
        echo "$ANDROID_GOOGLE_MAP_PROPERTIES" > android/appconfig.properties
        echo "$IOS_GOOGLE_MAP_PROPERTIES" > ios/Flutter/AppConfig.xcconfig
    - name: Install dependencies
      shell: bash
      run: |
        flutter clean
        flutter pub get
        flutter pub run build_runner build
        for d in $(ls packages); do cd packages/$d; flutter pub get; flutter pub run build_runner build; cd -; done
    - name: Run tests
      run: |
        flutter test --coverage
        for d in $(ls packages); do cd packages/$d; flutter test --coverage; cd -; done
    - uses: codecov/codecov-action@v3
      with:
        verbose: true
        fail_ci_if_error: true
    - run: flutter build apk --debug
    - run: flutter build ios --debug --no-codesign
